---
import type { GetStaticPaths } from "astro";
import { Icon } from "astro-icon/components";
import MainLayout from "../../layouts/MainLayout.astro";
import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import type { PokemonListResp } from "../../interfaces/pokemon-list";
import Title from "@components/shared/Title.astro";

export const getStaticPaths = (async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResp;
  return results.map(({ name, url }) => ({
    params: {
      name: name,
    },
    props: {
      name: name,
      url: url,
    },
  }));
  // return [
  //   {
  //     params: {
  //       name: "charmander",
  //     },
  //     props: {
  //       name: "charmander",
  //       url: "https://pokeapi.co/api/v2/pokemon/4/",
  //     },
  //   },
  // ];
}) satisfies GetStaticPaths;

const { name } = Astro.params;
const { url } = Astro.props;

const id = url.split("/").at(-2);
const audioSrc = `https://raw.githubusercontent.com/PokeAPI/cries/main/cries/pokemon/latest/${id}.ogg`;
const imageSrc = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${id}.png`;
---

<MainLayout
  title={`Pokemon - ${id} ${name}`}
  description={`Information about ${name}`}
  image={imageSrc}
/>
<section class="mt-10 mx-10 flex flex-col justify-center items-center">
  <div class="flex flex-row">
    <div class="pb-4">
      <button class="text-blue-500" onclick="history.back()">Regresar</button>
      <Title>{name}</Title>
    </div>
    <button id="btn-favorite" class="ml-4" data-name={name} data-id={id}>
      <Icon data-outline name="heart-outline" size={50} />
      <Icon data-full name="heart-full" class="hidden" size={50} />
    </button>
  </div>

  <PokemonCard name={name} url={url} isBig />

  <audio controls class="mt-5">
    <source src={audioSrc} type="audio/ogg" />
    Your browser does not support the audio element.
  </audio>
</section>

<style>
  a {
    @apply hover:underline text-blue-500;
  }
  #btn-favorite {
    @apply hover:animate-pulse;
  }
</style>
<script>
  // interface FavoritePokemon {
  //   name: string;
  //   id: number;
  // }
  import type { FavoritePokemon } from "@interfaces/favorite-pokemon";

  // document.addEventListener("astro:before-preparation ", () => {
  //   console.log("before preparation");
  // });

  // document.addEventListener("astro:after-preparation", () => {
  //   console.log("after preparation");
  // });

  // document.addEventListener("astro:before-swap", () => {
  //   console.log("before swap");
  // });

  // document.addEventListener("astro:after-swap", () => {
  //   console.log("after swap");
  // });

  // document.addEventListener("astro:page-load", () => {
  //   console.log("page load");
  // });
  const handlePaageLoad = () => {
    let favoritePokemons: FavoritePokemon[] = JSON.parse(
      localStorage.getItem("favorites") ?? "[]"
    );

    const btnFavorite = document.querySelector(
      "#btn-favorite"
    ) as HTMLButtonElement;

    if (!btnFavorite) return;

    const name = btnFavorite.dataset.name ?? "";
    const id = btnFavorite.dataset.id ?? "";

    const heartOutline = btnFavorite.querySelector(
      "[data-outline]"
    ) as HTMLElement;

    const heartFull = btnFavorite.querySelector("[data-full]") as HTMLElement;

    const isIconFavorite = () => {
      const isFavorite = favoritePokemons.some(
        (pokemon) => pokemon.name === name
      );

      if (isFavorite) {
        heartOutline.classList.add("hidden");
        heartFull.classList.remove("hidden");
      }
    };

    const toggleFavorite = () => {
      const isFavorite = favoritePokemons.some(
        (pokemon) => pokemon.name === name
      );

      if (isFavorite) {
        //Remover
        favoritePokemons = favoritePokemons.filter(
          (pokemon) => pokemon.name !== name
        );
      } else {
        //Agregar
        favoritePokemons.push({ id: +id, name: name });
      }

      localStorage.setItem("favorites", JSON.stringify(favoritePokemons));
    };

    isIconFavorite();
    btnFavorite.addEventListener("click", () => {
      heartOutline.classList.toggle("hidden");
      heartFull.classList.toggle("hidden");

      toggleFavorite();
    });
  };

  document.addEventListener("astro:page-load", handlePaageLoad);
</script>
